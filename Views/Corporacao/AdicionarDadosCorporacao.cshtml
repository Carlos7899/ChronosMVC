@using ChronosMVC.Models.Enums
@model ChronosMVC.Models.CorporacaoModel
@{
    ViewBag.Title = "AdicionarDadosCorporacao";
}

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Adicionar Informações</title>
</head>

<body>
    <div class="container">
        <div class="form-container">
            <h2>Adicionar Informações da Corporação</h2>
            <hr />

            @if (TempData["MensagemSucesso"] != null)
            {
                <div class="alert alert-success">
                    @TempData["MensagemSucesso"]
                </div>
            }

            @if (TempData["MensagemErro"] != null)
            {
                <div class="alert alert-danger">
                    @TempData["MensagemErro"]
                </div>
            }

            @using (Html.BeginForm("AdicionarInformacoes", "Corporacao", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    <input type="hidden" asp-for="idCorporacao" />
                    <input type="hidden" id="imagemBase64" name="fotoPerfilCorporacao" />

                    <div class="form-group">
                        <label for="NomeCorporacao">Nome da Corporação</label>
                        @Html.EditorFor(model => model.nomeCorporacao, new { htmlAttributes = new { @class = "form-control", @id = "NomeCorporacao" } })
                    </div>

                    <div class="form-group">
                        <label for="TipoCorporacao">Tipo da Corporação</label>
                        @Html.DropDownListFor(model => model.tipoCorporacao,
                                 new SelectList(Enum.GetValues(typeof(ChronosMVC.Models.Enums.TipoCorporacao)).Cast<TipoCorporacao>()
                                 .Select(tipo => new { Value = (int)tipo, Text = tipo.ToString() }),
                                 "Value", "Text"),
                                 "Selecione o Tipo", new { @class = "form-control", @id = "TipoCorporacao" })
                    </div>

                    <div class="form-group">
                        <label for="NumeroCorporacao">Número de telefone</label>
                        @Html.EditorFor(model => model.numeroCorporacao, new { htmlAttributes = new { @class = "form-control", @id = "NumeroCorporacao" } })
                    </div>

                    <div class="form-group">
                        <label for="CnpjCorporacao">CNPJ</label>
                        @Html.EditorFor(model => model.cnpjCorporacao, new { htmlAttributes = new { @class = "form-control", @id = "CnpjCorporacao" } })
                    </div>

                    <div class="form-group">
                        <label for="DescricaoCorporacao">Descrição</label>
                        @Html.TextAreaFor(model => model.descricaoCorporacao, new { htmlAttributes = new { @class = "form-control", @id = "DescricaoCorporacao" } })
                    </div>

                    <div class="form-group">
                        <label for="fotoPerfilCorporacao">Foto da Corporação</label>
                        <input type="file" class="form-control" id="fotoPerfilCorporacao" accept="image/*" onchange="convertToBase64()" />
                    </div>

                    <input type="submit" value="Salvar Informações" class="btn btn-primary" />
                </div>
            }
        </div>
    </div>

    <script>
        function convertToBase64() {
            const fileInput = document.getElementById('fotoPerfilCorporacao');
            const file = fileInput.files[0];
            const reader = new FileReader();

            reader.onloadend = function () {
                document.getElementById('imagemBase64').value = reader.result.split(',')[1]; 
            }

            if (file) {
                reader.readAsDataURL(file);
            }
        }
    </script>
</body>
