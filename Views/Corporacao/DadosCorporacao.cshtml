@model ChronosMVC.Models.CorporacaoModel

<h2 class="text-center">Dados da Corporação</h2>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdnjs.cloudflare.com/ajax/libs/inputmask/5.0.7-beta.35/inputmask.min.js"></script>

<div class="card mx-auto" style="max-width: 600px;">
    <div class="card-body text-center">
        <h5 class="card-title">Informações Pessoais</h5>

        <div class="mb-3">
            <strong>Foto da Corporação:</strong><br />
            @if (Model.fotoPerfilCorporacao != null && Model.fotoPerfilCorporacao.Length > 0)
            {
                var base64Image = Convert.ToBase64String(Model.fotoPerfilCorporacao);
                <img src="data:image/png;base64,@base64Image" alt="Foto da Corporação" class="img-circle" />
            }
            else
            {
                <img src="~/img/imagemUsuario.png" alt="Imagem padrão" class="img-circle" />
            }
        </div>

        <p>
            <strong>Nome:</strong> @(Model.nomeCorporacao ?? "Não disponível")
        </p>
        <p>
            <strong>Email:</strong> @(Model.emailCorporacao ?? "Não disponível")
        </p>
        <p>
            <strong>Tipo de Corporação:</strong> @(Model.tipoCorporacao)
        </p>
        <p>
            <strong>CNPJ:</strong> <span id="cnpjField">@Model.cnpjCorporacao</span>
        </p>
        <p>
            <strong>Telefone:</strong> <span id="phoneField">@Model.numeroCorporacao</span>
        </p>
        <p>
            <strong>Descrição:</strong> @(Model.descricaoCorporacao ?? "Não disponível")
        </p>
        <p>
            <strong>Data de Acesso:</strong> @(Model.DataAcesso?.ToString("dd/MM/yyyy") ?? "Não disponível")
        </p>
    </div>
</div>

<div class="text-center mt-4">
    <a asp-action="EditarDadosCorporacao" asp-route-idCorporacao="@Model.idCorporacao" class="btn btn-primary">Editar</a>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Formatar o CNPJ e o Telefone
        var cnpjField = document.getElementById("cnpjField");
        var phoneField = document.getElementById("phoneField");

        // Função para formatar CNPJ
        function formatCNPJ(cnpj) {
            return cnpj.replace(/(\d{2})(\d{3})(\d{3})(\d{4})(\d{2})/, "$1.$2.$3/$4-$5");
        }

        // Função para formatar telefone
        function formatPhone(phone) {
            return phone.replace(/(\d{2})(\d{5})(\d{4})/, "($1) $2-$3");
        }

        // Aplicar a formatação
        if (cnpjField) {
            cnpjField.innerText = formatCNPJ(cnpjField.innerText);
        }

        if (phoneField) {
            phoneField.innerText = formatPhone(phoneField.innerText);
        }
    });
</script>

<style>
    .img-circle {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        object-fit: cover;
        border: 2px solid #007bff; /* Borda azul */
    }

    .card {
        border: 1px solid #e0e0e0;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .card-body {
        background-color: #f8f9fa;
        padding: 20px;
    }

    .card-title {
        margin-bottom: 20px;
    }

    .mini-navegacao a {
        margin: 0 10px;
        text-decoration: none;
        color: #007bff;
        transition: color 0.3s;
    }

    .mini-navegacao a:hover {
        color: #0056b3; /* Cor mais escura ao passar o mouse */
    }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
        border-radius: 50px;
    }

    .btn-primary:hover {
        background-color: #0056b3;
        border-color: #0056b3;
    }
</style>
