<br><br>
@model ChronosMVC.Models.Curriculo.CurriculoModel

@{
    ViewData["Title"] = "Criar Currículo";
}

@section Styles {
    <link href="~/css/barraDeProgresso.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" />
}
<br />
<br />
<h2>Criar Currículo</h2>

<form asp-action="CriarCurriculo" method="post">
    <div class="form-group">
        <label for="emailCurriculo">Email</label>
        <input type="email" class="form-control" id="emailCurriculo" name="emailCurriculo" value="@Model?.emailCurriculo" required />
    </div>

    <div class="form-group">
    <label for="telefoneCurriculo">Telefone</label>
    <input type="text" class="form-control" id="telefoneCurriculo" name="telefoneCurriculo" value="@Model.telefoneCurriculo" 
           maxlength="15" pattern="\(\d{2}\) \d{5}-\d{4}" inputmode="numeric" required />
    <div class="invalid-feedback">
        O número de telefone deve ter no mínimo 10 caracteres e estar no formato (XX) XXXXX-XXXX.
    </div>
</div>

<script>
    const telefoneInput = document.getElementById('telefoneCurriculo');
    
    telefoneInput.addEventListener('input', function(event) {
        let telefone = event.target.value.replace(/\D/g, '');

        if (telefone.length <= 2) {
            telefone = telefone.replace(/^(\d{2})/, '($1) ');
        } else if (telefone.length <= 7) {
            telefone = telefone.replace(/^(\d{2})(\d{5})/, '($1) $2');
        } else if (telefone.length <= 10) {
            telefone = telefone.replace(/^(\d{2})(\d{5})(\d{1})/, '($1) $2-$3');
        } else {
            telefone = telefone.replace(/^(\d{2})(\d{5})(\d{4})/, '($1) $2-$3');
        }

        event.target.value = telefone;

        if (telefone.length >= 14) {
            event.target.classList.remove('is-invalid');
        } else {
            event.target.classList.add('is-invalid');
        }
    });

    const form = document.querySelector('form');
    form.addEventListener('submit', function(event) {
        if (telefoneInput.value.length < 14) {
            event.preventDefault();
            telefoneInput.classList.add('is-invalid');
        }
    });
</script>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>


    <div class="form-group">
        <label for="habilidadesCurriculo">Habilidades</label>
        <textarea class="form-control" id="habilidadesCurriculo" name="habilidadesCurriculo">@Model?.habilidadesCurriculo</textarea>
    </div>

    <div class="form-group">
        <label for="descricaoCurriculo">Objetivo</label>
        <textarea class="form-control" id="descricaoCurriculo" name="descricaoCurriculo">@Model?.descricaoCurriculo</textarea>
    </div>
<br></br>
    <button type="submit" class="btn btn-primary btn-lg btn-block">Próxima Etapa</button>
</form>


<div class="position-relative m-4">
    <div class="progress" role="progressbar" aria-label="Progress" aria-valuenow="33" aria-valuemin="0" aria-valuemax="100" style="height: 1px;">
        <div class="progress-bar" style="width: 33%"></div>
    </div>
    <!-- Botões representando as etapas -->
    <button id="avancar" type="button" class="position-absolute top-0 start-0 translate-middle btn btn-sm btn-primary rounded-pill step-btn" style="width: 2rem; height:2rem;">1</button>
    <button id="retroceder" type="button" class="position-absolute top-0 start-50 translate-middle btn btn-sm btn-secondary rounded-pill step-btn" style="width: 2rem; height:2rem;">2</button>
    <button type="button" class="position-absolute top-0 start-100 translate-middle btn btn-sm btn-secondary rounded-pill step-btn" style="width: 2rem; height:2rem;">3</button>
</div>


