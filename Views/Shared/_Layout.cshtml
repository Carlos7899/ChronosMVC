<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="manifest" href="~/manifest/manifest.json">
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Chronos</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/ChronosMVC.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/navbar.css" />

    @RenderSection("Styles", required: false)

</head>
<body>

    <header>
        <nav class="navbar bg-body-tertiary fixed-top">
            <div class="container-fluid">
                <ul class="nav">
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-area="" asp-controller="Home" asp-action="Index">Início</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-area="" asp-controller="Vagas" asp-action="VagasView">Vagas</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-area="" asp-controller="Curso" asp-action="ListaCursos">Cursos</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-area="" asp-controller="Home" asp-action="Contact">Contato</a>
                    </li>
                     @if (User.Identity.IsAuthenticated)
                     {
                            var idEgresso = User.FindFirst("idEgresso")?.Value;
                            @if (!string.IsNullOrEmpty(idEgresso))
                            {
                                    <li class="nav-item">
                                <a class="nav-link text-white" asp-area="" asp-controller="Curriculo" asp-action="Detalhes">Currículo</a>
                                    </li>
                            }
                     }
                </ul>

                <button style="background-color: white;" class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasNavbar" aria-controls="offcanvasNavbar" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasNavbar" aria-labelledby="offcanvasNavbarLabel">
                    <div class="offcanvas-header" style="background-color: rgb(114, 114, 255);">
                        <h5 class="offcanvas-title" id="offcanvasNavbarLabel" style="font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif; font-size: 200%;">Chronos</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                    </div>
                    <div class="offcanvas-body" style="font-size: 130%;">
                        <ul class="navbar-nav justify-content-end flex-grow-1 pe-3">
                            @if (User.Identity.IsAuthenticated)
                            {
                                var idCorporacao = User.FindFirst("idCorporacao")?.Value;
                                var idEgresso = User.FindFirst("idEgresso")?.Value;

                                if (!string.IsNullOrEmpty(idCorporacao))
                                {
                                    <li class="nav-item">
                                        <a class="nav-link text-dark" asp-area="" asp-controller="Corporacao" asp-action="DadosCorporacao">Meus Dados</a>
                                    </li>
                                }
                                else if (!string.IsNullOrEmpty(idEgresso))
                                {
                                    <li class="nav-item">
                                        <a class="nav-link text-dark" asp-area="" asp-controller="Egresso" asp-action="DadosEgresso">Meus Dados </a>
                                    </li>
                                }
                                <li class="nav-item">
                                    <a class="nav-link text-dark" href="#" onclick="confirmLogout(event)">Logout</a>
                                </li>

                                <div class="text-muted text-center" style="position: fixed; bottom: 10px; right: 10px;">
                                    @if (!string.IsNullOrEmpty(idCorporacao))
                                    {
                                        <span>ID Corporacao: @idCorporacao</span>
                                    }
                                    else if (!string.IsNullOrEmpty(idEgresso))
                                    {
                                        <span>ID Egresso: @idEgresso</span>
                                    }
                                </div>
                            }
                            else
                            {
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="EscolherLogin">Login</a>
                                </li>
                            }

                        </ul>
                    </div>
                </div>
            </div>
        </nav>
    </header>

    <div class="container">
        <main role="main" >
            @RenderBody()
        </main>
    </div>

    <script>
        function confirmLogout(event) {
            event.preventDefault();
            const confirmation = confirm("Você realmente deseja fazer logout?");
            if (confirmation) {
                window.location.href = '@Url.Action("Logout", "Corporacao")';
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            var offcanvasNavbar = document.getElementById('offcanvasNavbar');
            var bsOffcanvas = new bootstrap.Offcanvas(offcanvasNavbar);

            // Verifica se o menu estava aberto ao carregar a página
            if (sessionStorage.getItem('offcanvasState') === 'open') {
                bsOffcanvas.show();
            }

            // Armazena o estado do menu quando ele é aberto ou fechado
            offcanvasNavbar.addEventListener('hidden.bs.offcanvas', function () {
                sessionStorage.setItem('offcanvasState', 'closed');
            });

            offcanvasNavbar.addEventListener('shown.bs.offcanvas', function () {
                sessionStorage.setItem('offcanvasState', 'open');
            });

            // Fecha o menu ao clicar em qualquer link e impede o evento padrão de reabertura
            var navLinks = offcanvasNavbar.querySelectorAll('.nav-link');
            navLinks.forEach(function (link) {
                link.addEventListener('click', function (event) {
                    event.preventDefault(); // Previne a navegação imediata
                    bsOffcanvas.hide(); // Fecha o offcanvas
                    // Aguarda um curto momento antes de realizar a navegação
                    setTimeout(function () {
                        window.location.href = link.href; // Faz a navegação após o fechamento
                    }, 300); // 300ms de delay para garantir que o menu tenha fechado
                });
            });
        });
    </script>
    <script>
        if ('serviceWorker' in navigator) {
            navigator.serviceWorker.register('/js/service-worker.js')
                .then(() => console.log('Service Worker registrado com sucesso!'))
                .catch(err => console.error('Erro ao registrar o Service Worker:', err));
        }
    </script>






    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
